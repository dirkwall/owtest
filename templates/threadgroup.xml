          <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="REPLACE_NAMESPACE" enabled="true">
            <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
            <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
               <boolProp name="LoopController.continue_forever">false</boolProp>
               <intProp name="LoopController.loops">-1</intProp>
            </elementProp>
            <stringProp name="ThreadGroup.num_threads">REPLACE_USERS</stringProp>
            <stringProp name="ThreadGroup.ramp_time">1</stringProp>
            <boolProp name="ThreadGroup.scheduler">true</boolProp>
            <stringProp name="ThreadGroup.duration">REPLACE_DURATION</stringProp>
            <stringProp name="ThreadGroup.delay" />
            <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
         </ThreadGroup>
         <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Data Provider" enabled="true">
               <stringProp name="delimiter">,</stringProp>
               <stringProp name="fileEncoding" />
               <stringProp name="filename">data_REPLACE_NAMESPACE.csv</stringProp>
               <boolProp name="ignoreFirstLine">false</boolProp>
               <boolProp name="quotedData">false</boolProp>
               <boolProp name="recycle">true</boolProp>
               <stringProp name="shareMode">shareMode.all</stringProp>
               <boolProp name="stopThread">false</boolProp>
               <stringProp name="variableNames">NAMESPACE,NAME,CREDENTIALS,IP,PATH,PAYLOAD</stringProp>
            </CSVDataSet>
            <hashTree />
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${NAME}" enabled="true">
               <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
               <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                     <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">${data}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                     </elementProp>
                  </collectionProp>
               </elementProp>
               <stringProp name="HTTPSampler.domain">${IP}</stringProp>
               <stringProp name="HTTPSampler.port">443</stringProp>
               <stringProp name="HTTPSampler.protocol">https</stringProp>
               <stringProp name="HTTPSampler.contentEncoding" />
               <stringProp name="HTTPSampler.path">${PATH}</stringProp>
               <stringProp name="HTTPSampler.method">POST</stringProp>
               <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
               <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
               <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
               <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
               <stringProp name="HTTPSampler.embedded_url_re" />
               <stringProp name="HTTPSampler.connect_timeout" />
               <stringProp name="HTTPSampler.response_timeout" />
            </HTTPSamplerProxy>
            <hashTree>
               <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="filename" />
                  <stringProp name="parameters" />
                  <stringProp name="script">import org.apache.commons.codec.binary.Base64;

              String creds = vars.get("CREDENTIALS");
              byte[] encodedUsernamePassword = Base64.encodeBase64(creds.getBytes());
              vars.put("auth", new String(encodedUsernamePassword));

              String payload = vars.get("PAYLOAD");
              String data = ""
              if (payload.size() &gt; 0) {
                byte[] bytes = payload.decodeBase64();
                data = new String(bytes);
              }
              vars.put("data", data)</stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
               </JSR223PreProcessor>
               <hashTree />
               <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                     <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                     </elementProp>
                     <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">Basic ${auth}</stringProp>
                     </elementProp>
                  </collectionProp>
               </HeaderManager>
               <hashTree />
            </hashTree>
         </hashTree>
